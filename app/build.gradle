import java.text.DateFormat
import java.text.SimpleDateFormat

static def getDateTime() {
    DateFormat df = new SimpleDateFormat("dd MMMMM yyyy")
    return df.format(new Date()) + " Ð³."
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29

    def fileNaming = "apk/NoNameX"
    def versionNumber = 55
    def versionMajor = "1"
    def versionMinor = "3"
    def versionPatch = "5"
    def versionBuild = -1
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    ext.autoIncrementBuildNumber = {
        if (versionPropsFile.canRead()) {
            def versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps['DATE_BUILD'] = getDateTime()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new FileNotFoundException("Could not read version.properties!")
        }
    }

    def appId = "com.svarochnyeraboty.tosno"
    defaultConfig {
        applicationId appId
        minSdkVersion 21
        targetSdkVersion 29
        versionCode versionNumber
        versionName "${versionMajor}.${versionMinor}.${versionPatch} (${versionBuild})"
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file("/home/isanechek/keys/averdsoft.jks")
            storePassword "softaverd"
            keyAlias "averdsoft"
            keyPassword "softaverd"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude("META-INF/*.kotlin_module")
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${fileNaming}-${versionMajor}.${versionMinor}.${versionPatch}.apk"
        }
    }

    gradle.taskGraph.whenReady {taskGraph ->
        if (taskGraph.hasTask(assembleDebug)) {  /* when run debug task */
            autoIncrementBuildNumber()
        } else if (taskGraph.hasTask(assembleRelease)) { /* when run release task */
            autoIncrementBuildNumber()
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    def coroutines_version = '1.3.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation 'androidx.appcompat:appcompat:1.2.0-beta01'
    implementation 'androidx.core:core-ktx:1.3.0-beta01'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'androidx.sqlite:sqlite-ktx:2.1.0'
    implementation 'androidx.paging:paging-runtime:2.1.2'

    def fragmentVersion = '1.3.0-alpha03'
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"

    def lifecycleVersion = '2.3.0-alpha01'
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    def koin_version = '2.1.5'
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-core-ext:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    implementation 'com.vk:androidsdk:2.0.2'

    implementation 'jp.wasabeef:glide-transformations:4.0.1'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
    implementation 'com.github.florent37:shapeofview:1.4.7'
    api 'com.ydevelop:bannerlayout:1.1.5'

    implementation "android.arch.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigation_version"

    def ok_version = '3.14.2'
    implementation "com.squareup.okhttp3:okhttp:$ok_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_version"

    def retrofit_version = '2.5.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    implementation 'com.yandex.android:mobmetricalib:3.6.4'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
